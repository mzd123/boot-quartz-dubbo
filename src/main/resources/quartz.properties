org.quartz.scheduler.instanceName=MyScheduler
org.quartz.threadPool.threadCount=10
#如果用内存记录定时任务信息，应用重新启动后，定时任务信息将会丢失。
# 比如，用户A通过系统设置1小时后执行Z操作，设置好后的，因系统重新启动，新启动的系统将会丢失“1小时后执行Z操作”的定时任务。
#org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore
#如果，我们需要在系统意外（或非意外）重新启动后，仍保留定时任务信息，可以使用数据库存储定时任务信息。
org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
#方言：org.quartz.impl.jdbcjobstore.StdJDBCDelegate---用于完全符合JDBC的驱动程序
org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
##使用自己的配置文件
org.quartz.jobStore.useProperties:true
#表的前缀--- 默认就是QRTZ_
org.quartz.jobStore.tablePrefix=QRTZ_
#配置quartz数据库，优势就是可以和业务数据库分开，相当于配置了两个数据库
org.quartz.jobStore.dataSource=myDS
org.quartz.dataSource.myDS.driver=com.mysql.cj.jdbc.Driver
org.quartz.dataSource.myDS.URL=jdbc:mysql://10.10.0.100:3307/mzd?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false
org.quartz.dataSource.myDS.user=root
org.quartz.dataSource.myDS.password=root
org.quartz.dataSource.myDS.maxConnections=5



#如果使用集群，instanceId必须唯一，设置成AUTO
org.quartz.scheduler.instanceId = AUTO
org.quartz.scheduler.rmi.export: false
org.quartz.scheduler.rmi.proxy: false
org.quartz.scheduler.wrapJobExecutionInUserTransaction: false

org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool
org.quartz.threadPool.threadPriority: 5
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread: true
org.quartz.jobStore.misfireThreshold: 60000

org.quartz.jobStore.isClustered = true
org.quartz.jobStore.clusterCheckinInterval = 20000